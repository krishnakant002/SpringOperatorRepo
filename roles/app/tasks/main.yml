---
# tasks file for App
- name: Create app Secret
  community.kubernetes.k8s:
     definition:
        kind: Secret
        apiVersion: v1
        metadata:
          name: mongo-secret
          namespace: '{{ ansible_operator_meta.namespace }}'
        type: Opaque
        data:
         root-username: "{{root_username}}"
         root-password: "{{root_password}}"
- name: Create ConfigMap
  community.kubernetes.k8s:
     definition:
        kind: ConfigMap
        apiVersion: v1
        metadata:
          name: mongo-conf
          namespace: '{{ ansible_operator_meta.namespace }}'
        data:
         database: admin
         host: mongodb-service
- name: Create springboot service
  community.kubernetes.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: spring-mongo-service
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
       type: NodePort
       selector:
         app: spring-mongo-service
       ports:
        - protocol: TCP
          port: 8080
          nodePort: 30081
- name: Create Springboot deployment
  community.kubernetes.k8s:
    definition:
       apiVersion: apps/v1
       kind: Deployment
       metadata:
         name: spring-mongo-service
         namespace: '{{ ansible_operator_meta.namespace }}'
         labels:
           app: spring-mongo-service
       spec:
         replicas: "{{size}}"
         selector:
           matchLabels:
              app: spring-mongo-service
         template:
            metadata:
               labels:
                  app: spring-mongo-service
            spec:
             containers:
              - name: spring-mongo-service
                image: "docker.io/krishnakant002/spring-mongo-service:2.0"
                env:
                 - name: MONGO_HOST
                   valueFrom:
                     configMapKeyRef:
                      name: mongo-conf
                      key: host
                 - name: MONGO_USERNAME 
                   valueFrom:
                    secretKeyRef:
                     name: mongo-secret
                     key: root-username
                 - name: MONGO_PASSWORD 
                   valueFrom:
                    secretKeyRef:
                     name: mongo-secret
                     key: root-password   
                 - name: MONGO_DB
                   valueFrom:
                    configMapKeyRef:
                     name: mongo-conf
                     key: database    
                ports:
                - containerPort: 8080
